// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview AI-powered tool that analyzes the chain of custody logs and evidence data to identify potential tampering or discrepancies.
 *
 * - detectTampering - A function that handles the tampering detection process.
 * - DetectTamperingInput - The input type for the detectTampering function.
 * - DetectTamperingOutput - The return type for the detectTampering function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const DetectTamperingInputSchema = z.object({
  chainOfCustodyLogs: z
    .string()
    .describe('Chain of custody logs in a structured format, such as JSON or CSV.'),
  evidenceData: z
    .string()
    .describe('Evidence data, including descriptions, timestamps, and MD5 hashes of files.'),
});
export type DetectTamperingInput = z.infer<typeof DetectTamperingInputSchema>;

const DetectTamperingOutputSchema = z.object({
  isTampered: z.boolean().describe('Whether potential tampering or discrepancies are detected.'),
  explanation: z
    .string()
    .describe('Explanation of the potential tampering or discrepancies detected.'),
  confidenceScore: z
    .number()
    .describe('A score between 0 and 1 indicating the confidence level of the tampering detection.'),
});
export type DetectTamperingOutput = z.infer<typeof DetectTamperingOutputSchema>;

export async function detectTampering(input: DetectTamperingInput): Promise<DetectTamperingOutput> {
  return detectTamperingFlow(input);
}

const prompt = ai.definePrompt({
  name: 'detectTamperingPrompt',
  input: {schema: DetectTamperingInputSchema},
  output: {schema: DetectTamperingOutputSchema},
  prompt: `You are an expert in forensic analysis, specializing in detecting tampering in chain of custody logs and evidence data.

You will analyze the provided chain of custody logs and evidence data to identify any potential tampering or discrepancies.
Pay close attention to inconsistencies in timestamps, unexpected modifications, and mismatches in MD5 hashes.

Chain of Custody Logs:
{{{chainOfCustodyLogs}}}

Evidence Data:
{{{evidenceData}}}

Based on your analysis, determine whether there is evidence of tampering and provide an explanation.
Also, provide a confidence score (between 0 and 1) indicating the certainty of your tampering detection.

Ensure that the isTampered, explanation, and confidenceScore fields are populated correctly.
`,
});

const detectTamperingFlow = ai.defineFlow(
  {
    name: 'detectTamperingFlow',
    inputSchema: DetectTamperingInputSchema,
    outputSchema: DetectTamperingOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
